{
  "name": "speechmarkdown",
  "scopeName": "text.speechmarkdown",
  "patterns": [
    {
      "include": "#frontMatter"
    },
    {
      "include": "#block"
    }
  ],
  "repository": {
    "block": {
      "patterns": [
        {
          "include": "#separator"
        },
        {
          "include": "#heading"
        },
        {
          "include": "#blockquote"
        },
        {
          "include": "#lists"
        },
        {
          "include": "#raw_block"
        },
        {
          "include": "#link-def"
        },
        {
          "include": "#html"
        },
        {
          "include": "#paragraph"
        }
      ]
    },
    "blockquote": {
      "begin": "(^|\\G)[ ]{0,3}(>) ?",
      "captures": {
        "2": {
          "name": "punctuation.definition.quote.begin.speechmarkdown"
        }
      },
      "name": "markup.quote.speechmarkdown",
      "patterns": [
        {
          "include": "#block"
        }
      ],
      "while": "(^|\\G)\\s*(>) ?"
    },
    "heading": {
      "match": "(?:^|\\G)[ ]{0,3}((#{1,6})\\s+(?=[\\S[^#]]).*?\\s*(#{1,6})?)$\\n?",
      "captures": {
        "1": {
          "patterns": [
            {
              "match": "(#{6})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.6.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            },
            {
              "match": "(#{5})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.5.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            },
            {
              "match": "(#{4})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.4.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            },
            {
              "match": "(#{3})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.3.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            },
            {
              "match": "(#{2})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.2.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            },
            {
              "match": "(#{1})\\s+(?=[\\S[^#]])(.*?)\\s*(\\s+#+)?$\\n?",
              "name": "heading.1.speechmarkdown",
              "captures": {
                "1": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                },
                "2": {
                  "name": "entity.name.section.speechmarkdown"
                },
                "3": {
                  "name": "punctuation.definition.heading.speechmarkdown"
                }
              }
            }
          ]
        }
      },
      "name": "markup.heading.speechmarkdown",
      "patterns": [
        {
          "include": "#inline"
        }
      ]
    },
    "heading-setext": {
      "patterns": [
        {
          "match": "^(={3,})(?=[ \\t]*$\\n?)",
          "name": "markup.heading.setext.1.speechmarkdown"
        },
        {
          "match": "^(-{3,})(?=[ \\t]*$\\n?)",
          "name": "markup.heading.setext.2.speechmarkdown"
        }
      ]
    },
    "html": {
      "patterns": [
        {
          "begin": "(^|\\G)\\s*(<!--)",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.html"
            },
            "2": {
              "name": "punctuation.definition.comment.html"
            }
          },
          "end": "(-->)",
          "name": "comment.block.html"
        },
        {
          "begin": "(?i)(^|\\G)\\s*(?=<(script|style|pre)(\\s|$|>)(?!.*?</(script|style|pre)>))",
          "end": "(?i)(.*)((</)(script|style|pre)(>))",
          "endCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "text.html.derivative"
                }
              ]
            },
            "2": {
              "name": "meta.tag.structure.$4.end.html"
            },
            "3": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "4": {
              "name": "entity.name.tag.html"
            },
            "5": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "patterns": [
            {
              "begin": "(\\s*|$)",
              "patterns": [
                {
                  "include": "text.html.derivative"
                }
              ],
              "while": "(?i)^(?!.*</(script|style|pre)>)"
            }
          ]
        },
        {
          "begin": "(?i)(^|\\G)\\s*(?=</?[a-zA-Z]+[^\\s/&gt;]*(\\s|$|/?>))",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ],
          "while": "^(?!\\s*$)"
        },
        {
          "begin": "(^|\\G)\\s*(?=(<[a-zA-Z0-9\\-](/?>|\\s.*?>)|</[a-zA-Z0-9\\-]>)\\s*$)",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ],
          "while": "^(?!\\s*$)"
        }
      ]
    },
    "link-def": {
      "captures": {
        "1": {
          "name": "punctuation.definition.constant.speechmarkdown"
        },
        "2": {
          "name": "constant.other.reference.link.speechmarkdown"
        },
        "3": {
          "name": "punctuation.definition.constant.speechmarkdown"
        },
        "4": {
          "name": "punctuation.separator.key-value.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "6": {
          "name": "markup.underline.link.speechmarkdown"
        },
        "7": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "8": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "9": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "10": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "11": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "12": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "13": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        }
      },
      "match": "(?x)\n  \\s*            # Leading whitespace\n  (\\[)([^]]+?)(\\])(:)    # Reference name\n  [ \\t]*          # Optional whitespace\n  (<?)(\\S+?)(>?)      # The url\n  [ \\t]*          # Optional whitespace\n  (?:\n      ((\\().+?(\\)))    # Match title in quotesâ€¦\n    | ((\").+?(\"))    # or in parens.\n  )?            # Title is optional\n  \\s*            # Optional whitespace\n  $\n",
      "name": "meta.link.reference.def.speechmarkdown"
    },
    "list_paragraph": {
      "begin": "(^|\\G)(?=\\S)(?![*+->]\\s|[0-9]+\\.\\s)",
      "name": "meta.paragraph.speechmarkdown",
      "patterns": [
        {
          "include": "#inline"
        },
        {
          "include": "text.html.derivative"
        },
        {
          "include": "#heading-setext"
        }
      ],
      "while": "(^|\\G)(?!\\s*$|#|[ ]{0,3}([-*_>][ ]{2,}){3,}[ \\t]*$\\n?|[ ]{0,3}[*+->]|[ ]{0,3}[0-9]+\\.)"
    },
    "lists": {
      "patterns": [
        {
          "begin": "(^|\\G)([ ]{0,3})([*+-])([ \\t])",
          "beginCaptures": {
            "3": {
              "name": "punctuation.definition.list.begin.speechmarkdown"
            }
          },
          "comment": "Currently does not support un-indented second lines.",
          "name": "markup.list.unnumbered.speechmarkdown",
          "patterns": [
            {
              "include": "#block"
            },
            {
              "include": "#list_paragraph"
            }
          ],
          "while": "((^|\\G)([ ]{2,4}|\\t))|(^[ \\t]*$)"
        },
        {
          "begin": "(^|\\G)([ ]{0,3})([0-9]+\\.)([ \\t])",
          "beginCaptures": {
            "3": {
              "name": "punctuation.definition.list.begin.speechmarkdown"
            }
          },
          "name": "markup.list.numbered.speechmarkdown",
          "patterns": [
            {
              "include": "#block"
            },
            {
              "include": "#list_paragraph"
            }
          ],
          "while": "((^|\\G)([ ]{2,4}|\\t))|(^[ \\t]*$)"
        }
      ]
    },
    "paragraph": {
      "begin": "(^|\\G)[ ]{0,3}(?=\\S)",
      "name": "meta.paragraph.speechmarkdown",
      "patterns": [
        {
          "include": "#inline"
        },
        {
          "include": "text.html.derivative"
        },
        {
          "include": "#heading-setext"
        }
      ],
      "while": "(^|\\G)((?=\\s*[-=]{3,}\\s*$)|[ ]{4,}(?=\\S))"
    },
    "raw_block": {
      "begin": "(^|\\G)([ ]{4}|\\t)",
      "name": "markup.raw.block.speechmarkdown",
      "while": "(^|\\G)([ ]{4}|\\t)"
    },
    "separator": {
      "match": "(^|\\G)[ ]{0,3}([\\*\\-\\_])([ ]{0,2}\\2){2,}[ \\t]*$\\n?",
      "name": "meta.separator.speechmarkdown"
    },
    "frontMatter": {
      "begin": "\\A-{3}\\s*$",
      "contentName": "meta.embedded.block.frontmatter",
      "patterns": [
        {
          "include": "source.yaml"
        }
      ],
      "end": "(^|\\G)-{3}|\\.{3}\\s*$"
    },
    "inline": {
      "patterns": [
        {
          "include": "#ampersand"
        },
        {
          "include": "#bracket"
        },
        {
          "include": "#bold"
        },
        {
          "include": "#italic"
        },
        {
          "include": "#raw"
        },
        {
          "include": "#escape"
        },
        {
          "include": "#image-inline"
        },
        {
          "include": "#image-ref"
        },
        {
          "include": "#link-email"
        },
        {
          "include": "#link-inet"
        },
        {
          "include": "#link-inline"
        },
        {
          "include": "#link-ref"
        },
        {
          "include": "#link-ref-literal"
        },
        {
          "include": "#link-ref-shortcut"
        }
      ]
    },
    "ampersand": {
      "comment": "speechmarkdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.",
      "match": "&(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)",
      "name": "meta.other.valid-ampersand.speechmarkdown"
    },
    "bold": {
      "begin": "(?x) (\\*\\*(?=\\w)|(?<!\\w)\\*\\*|(?<!\\w)\\b__)(?=\\S) (?=\n  (\n    <[^>]*+>              # HTML tags\n    | (?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>\n                      # Raw\n    | \\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+      # Escapes\n    | \\[\n    (\n        (?<square>          # Named group\n          [^\\[\\]\\\\]        # Match most chars\n          | \\\\.            # Escaped chars\n          | \\[ \\g<square>*+ \\]    # Nested brackets\n        )*+\n      \\]\n      (\n        (              # Reference Link\n          [ ]?          # Optional space\n          \\[[^\\]]*+\\]        # Ref name\n        )\n        | (              # Inline Link\n          \\(            # Opening paren\n            [ \\t]*+        # Optional whitespace\n            <?(.*?)>?      # URL\n            [ \\t]*+        # Optional whitespace\n            (          # Optional Title\n              (?<title>['\"])\n              (.*?)\n              \\k<title>\n            )?\n          \\)\n        )\n      )\n    )\n    | (?!(?<=\\S)\\1).            # Everything besides\n                      # style closer\n  )++\n  (?<=\\S)(?=__\\b|\\*\\*)\\1                # Close\n)\n",
      "captures": {
        "1": {
          "name": "punctuation.definition.bold.speechmarkdown"
        }
      },
      "end": "(?<=\\S)(\\1)",
      "name": "markup.bold.speechmarkdown",
      "patterns": [
        {
          "applyEndPatternLast": 1,
          "begin": "(?=<[^>]*?>)",
          "end": "(?<=>)",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ]
        },
        {
          "include": "#escape"
        },
        {
          "include": "#ampersand"
        },
        {
          "include": "#bracket"
        },
        {
          "include": "#raw"
        },
        {
          "include": "#bold"
        },
        {
          "include": "#italic"
        },
        {
          "include": "#image-inline"
        },
        {
          "include": "#link-inline"
        },
        {
          "include": "#link-inet"
        },
        {
          "include": "#link-email"
        },
        {
          "include": "#image-ref"
        },
        {
          "include": "#link-ref-literal"
        },
        {
          "include": "#link-ref"
        },
        {
          "include": "#link-ref-shortcut"
        }
      ]
    },
    "bracket": {
      "comment": "speechmarkdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.",
      "match": "<(?![a-zA-Z/?\\$!])",
      "name": "meta.other.valid-bracket.speechmarkdown"
    },
    "escape": {
      "match": "\\\\[-`*_#+.!(){}\\[\\]\\\\>]",
      "name": "constant.character.escape.speechmarkdown"
    },
    "image-inline": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.description.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.metadata.speechmarkdown"
        },
        "6": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "7": {
          "name": "markup.underline.link.image.speechmarkdown"
        },
        "8": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "9": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "10": {
          "name": "punctuation.definition.string.speechmarkdown"
        },
        "11": {
          "name": "punctuation.definition.string.speechmarkdown"
        },
        "12": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "13": {
          "name": "punctuation.definition.string.speechmarkdown"
        },
        "14": {
          "name": "punctuation.definition.string.speechmarkdown"
        },
        "15": {
          "name": "punctuation.definition.metadata.speechmarkdown"
        }
      },
      "match": "(?x)\n  (\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                # Match the link text.\n  (\\()            # Opening paren for url\n    (<?)(\\S+?)(>?)      # The url\n    [ \\t]*          # Optional whitespace\n    (?:\n        ((\\().+?(\\)))    # Match title in parensâ€¦\n      | ((\").+?(\"))    # or in quotes.\n    )?            # Title is optional\n    \\s*            # Optional whitespace\n  (\\))\n",
      "name": "meta.image.inline.speechmarkdown"
    },
    "image-ref": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.description.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.constant.speechmarkdown"
        },
        "6": {
          "name": "constant.other.reference.link.speechmarkdown"
        },
        "7": {
          "name": "punctuation.definition.constant.speechmarkdown"
        }
      },
      "match": "(\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(.*?)(\\])",
      "name": "meta.image.reference.speechmarkdown"
    },
    "italic": {
      "begin": "(?x) (\\*(?=\\w)|(?<!\\w)\\*|(?<!\\w)\\b_)(?=\\S)                # Open\n  (?=\n    (\n      <[^>]*+>              # HTML tags\n      | (?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>\n                        # Raw\n      | \\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+      # Escapes\n      | \\[\n      (\n          (?<square>          # Named group\n            [^\\[\\]\\\\]        # Match most chars\n            | \\\\.            # Escaped chars\n            | \\[ \\g<square>*+ \\]    # Nested brackets\n          )*+\n        \\]\n        (\n          (              # Reference Link\n            [ ]?          # Optional space\n            \\[[^\\]]*+\\]        # Ref name\n          )\n          | (              # Inline Link\n            \\(            # Opening paren\n              [ \\t]*+        # Optional whtiespace\n              <?(.*?)>?      # URL\n              [ \\t]*+        # Optional whtiespace\n              (          # Optional Title\n                (?<title>['\"])\n                (.*?)\n                \\k<title>\n              )?\n            \\)\n          )\n        )\n      )\n      | \\1\\1                # Must be bold closer\n      | (?!(?<=\\S)\\1).            # Everything besides\n                        # style closer\n    )++\n    (?<=\\S)(?=_\\b|\\*)\\1                # Close\n  )\n",
      "captures": {
        "1": {
          "name": "punctuation.definition.italic.speechmarkdown"
        }
      },
      "end": "(?<=\\S)(\\1)((?!\\1)|(?=\\1\\1))",
      "name": "markup.italic.speechmarkdown",
      "patterns": [
        {
          "applyEndPatternLast": 1,
          "begin": "(?=<[^>]*?>)",
          "end": "(?<=>)",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ]
        },
        {
          "include": "#escape"
        },
        {
          "include": "#ampersand"
        },
        {
          "include": "#bracket"
        },
        {
          "include": "#raw"
        },
        {
          "include": "#bold"
        },
        {
          "include": "#image-inline"
        },
        {
          "include": "#link-inline"
        },
        {
          "include": "#link-inet"
        },
        {
          "include": "#link-email"
        },
        {
          "include": "#image-ref"
        },
        {
          "include": "#link-ref-literal"
        },
        {
          "include": "#link-ref"
        },
        {
          "include": "#link-ref-shortcut"
        }
      ]
    },
    "link-email": {
      "captures": {
        "1": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "2": {
          "name": "markup.underline.link.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.link.speechmarkdown"
        }
      },
      "match": "(<)((?:mailto:)?[-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(>)",
      "name": "meta.link.email.lt-gt.speechmarkdown"
    },
    "link-inet": {
      "captures": {
        "1": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "2": {
          "name": "markup.underline.link.speechmarkdown"
        },
        "3": {
          "name": "punctuation.definition.link.speechmarkdown"
        }
      },
      "match": "(<)((?:https?|ftp)://.*?)(>)",
      "name": "meta.link.inet.speechmarkdown"
    },
    "link-inline": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.title.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.metadata.speechmarkdown"
        },
        "6": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "7": {
          "name": "markup.underline.link.speechmarkdown"
        },
        "9": {
          "name": "punctuation.definition.link.speechmarkdown"
        },
        "10": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "11": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "12": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "13": {
          "name": "string.other.link.description.title.speechmarkdown"
        },
        "14": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "15": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "16": {
          "name": "punctuation.definition.metadata.speechmarkdown"
        }
      },
      "match": "(?x)\n  (\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                # Match the link text.\n  (\\()            # Opening paren for url\n    (<?)((?<url>(?>[^\\s()]+)|\\(\\g<url>*\\))*)(>?)      # The url\n    [ \\t]*          # Optional whitespace\n    (?:\n        ((\\().+?(\\)))    # Match title in parensâ€¦\n      | ((\").+?(\"))    # or in quotes.\n    )?            # Title is optional\n    \\s*            # Optional whitespace\n  (\\))\n",
      "name": "meta.link.inline.speechmarkdown"
    },
    "link-ref": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.title.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.constant.begin.speechmarkdown"
        },
        "6": {
          "name": "constant.other.reference.link.speechmarkdown"
        },
        "7": {
          "name": "punctuation.definition.constant.end.speechmarkdown"
        }
      },
      "match": "(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\[)([^\\]]*+)(\\])",
      "name": "meta.link.reference.speechmarkdown"
    },
    "link-ref-literal": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.title.speechmarkdown"
        },
        "4": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        },
        "5": {
          "name": "punctuation.definition.constant.begin.speechmarkdown"
        },
        "6": {
          "name": "punctuation.definition.constant.end.speechmarkdown"
        }
      },
      "match": "(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(\\])",
      "name": "meta.link.reference.literal.speechmarkdown"
    },
    "link-ref-shortcut": {
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.speechmarkdown"
        },
        "2": {
          "name": "string.other.link.title.speechmarkdown"
        },
        "3": {
          "name": "punctuation.definition.string.end.speechmarkdown"
        }
      },
      "match": "(\\[)(\\S+?)(\\])",
      "name": "meta.link.reference.speechmarkdown"
    },
    "raw": {
      "captures": {
        "1": {
          "name": "punctuation.definition.raw.speechmarkdown"
        },
        "3": {
          "name": "punctuation.definition.raw.speechmarkdown"
        }
      },
      "match": "(`+)([^`]|(?!(?<!`)\\1(?!`))`)*+(\\1)",
      "name": "markup.inline.raw.string.speechmarkdown"
    }
  }
}
